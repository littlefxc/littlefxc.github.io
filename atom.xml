<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一年春又来</title>
  
  
  <link href="http://littlefxc.github.io/atom.xml" rel="self"/>
  
  <link href="http://littlefxc.github.io/"/>
  <updated>2021-09-17T08:07:37.559Z</updated>
  <id>http://littlefxc.github.io/</id>
  
  <author>
    <name>一年春又来</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>通信科普</title>
    <link href="http://littlefxc.github.io/2021/09/17/%E9%80%9A%E4%BF%A1%E7%A7%91%E6%99%AE/"/>
    <id>http://littlefxc.github.io/2021/09/17/%E9%80%9A%E4%BF%A1%E7%A7%91%E6%99%AE/</id>
    <published>2021-09-17T07:54:43.000Z</published>
    <updated>2021-09-17T08:07:37.559Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;通信科普&quot;&gt;&lt;a href=&quot;#通信科普&quot; class=&quot;headerlink&quot; title=&quot;通信科普&quot;&gt;&lt;/a&gt;通信科普&lt;/h1&gt;&lt;p&gt;本文主要简略记录计算机网络相关名词的介绍。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绝大部分通信系统，都可以用分层的角度来看，也必须用分层的角度来看。看懂了这个系统的层级，就看懂了这个系统的70%。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="网络" scheme="http://littlefxc.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL事务相关</title>
    <link href="http://littlefxc.github.io/2021/09/14/MySQL%E4%BA%8B%E5%8A%A1%E7%9B%B8%E5%85%B3/"/>
    <id>http://littlefxc.github.io/2021/09/14/MySQL%E4%BA%8B%E5%8A%A1%E7%9B%B8%E5%85%B3/</id>
    <published>2021-09-14T06:34:47.000Z</published>
    <updated>2021-09-16T09:27:57.011Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1. 概述&quot;&gt;&lt;/a&gt;1. 概述&lt;/h1&gt;&lt;p&gt;本文重新梳理一些关于 MySQL 事务相关的概念，主要包括：事务隔离引发的问题和事务隔离的级别。&lt;/p&gt;</summary>
    
    
    
    
    <category term="mysql" scheme="http://littlefxc.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Go 语言学习</title>
    <link href="http://littlefxc.github.io/2021/08/30/Go-%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    <id>http://littlefxc.github.io/2021/08/30/Go-%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-08-30T01:02:29.000Z</published>
    <updated>2021-08-30T02:43:03.161Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Go-语言的并发模型是怎么样的？&quot;&gt;&lt;a href=&quot;#Go-语言的并发模型是怎么样的？&quot; class=&quot;headerlink&quot; title=&quot;Go 语言的并发模型是怎么样的？&quot;&gt;&lt;/a&gt;Go 语言的并发模型是怎么样的？&lt;/h1&gt;&lt;h2</summary>
        
      
    
    
    
    
    <category term="go" scheme="http://littlefxc.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>数据库优化的几个阶段</title>
    <link href="http://littlefxc.github.io/2021/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96%E7%9A%84%E5%87%A0%E4%B8%AA%E9%98%B6%E6%AE%B5/"/>
    <id>http://littlefxc.github.io/2021/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96%E7%9A%84%E5%87%A0%E4%B8%AA%E9%98%B6%E6%AE%B5/</id>
    <published>2021-08-23T08:15:27.000Z</published>
    <updated>2021-08-23T08:16:02.627Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载自&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>内置故障排查工具-jinfo</title>
    <link href="http://littlefxc.github.io/2021/08/10/jinfo/"/>
    <id>http://littlefxc.github.io/2021/08/10/jinfo/</id>
    <published>2021-08-10T03:20:40.000Z</published>
    <updated>2021-08-10T03:23:04.267Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;jinfo&quot;&gt;&lt;a href=&quot;#jinfo&quot; class=&quot;headerlink&quot; title=&quot;jinfo&quot;&gt;&lt;/a&gt;jinfo&lt;/h1&gt;&lt;h2 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
    <category term="JVM" scheme="http://littlefxc.github.io/tags/JVM/"/>
    
    <category term="Java" scheme="http://littlefxc.github.io/tags/Java/"/>
    
    <category term="监控工具" scheme="http://littlefxc.github.io/tags/%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>synchronized锁升级过程和锁状态</title>
    <link href="http://littlefxc.github.io/2021/08/07/synchronized%E9%94%81%E5%8D%87%E7%BA%A7%E8%BF%87%E7%A8%8B%E5%92%8C%E9%94%81%E7%8A%B6%E6%80%81/"/>
    <id>http://littlefxc.github.io/2021/08/07/synchronized%E9%94%81%E5%8D%87%E7%BA%A7%E8%BF%87%E7%A8%8B%E5%92%8C%E9%94%81%E7%8A%B6%E6%80%81/</id>
    <published>2021-08-07T11:41:22.000Z</published>
    <updated>2021-09-16T01:03:43.710Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载自&lt;a href=&quot;https://segmentfault.com/a/1190000022904663&quot;&gt;https://segmentfault.com/a/1190000022904663&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h3&gt;&lt;p&gt;锁的状态总共有四种，级别由低到高依次为：无锁、偏向锁、轻量级锁、重量级锁，这四种锁状态分别代表什么，为什么会有锁升级？其实在 JDK 1.6之前，synchronized 还是一个重量级锁，是一个效率比较低下的锁，但是在JDK 1.6后，Jvm为了提高锁的获取与释放效率对（synchronized ）进行了优化，引入了 偏向锁 和 轻量级锁 ，从此以后锁的状态就有了四种（无锁、偏向锁、轻量级锁、重量级锁），并且四种状态会随着竞争的情况逐渐升级，而且是不可逆的过程，即不可降级，也就是说只能进行锁升级（从低级别到高级别），不能锁降级（高级别到低级别），意味着偏向锁升级成轻量级锁后不能降级成偏向锁。这种锁升级却不能降级的策略，目的是为了提高获得锁和释放锁的效率。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="http://littlefxc.github.io/tags/Java/"/>
    
    <category term="synchronized" scheme="http://littlefxc.github.io/tags/synchronized/"/>
    
  </entry>
  
  <entry>
    <title>内置监控工具 - jstat</title>
    <link href="http://littlefxc.github.io/2021/08/05/jstat/"/>
    <id>http://littlefxc.github.io/2021/08/05/jstat/</id>
    <published>2021-08-05T01:52:54.000Z</published>
    <updated>2021-08-05T01:54:28.449Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;内置监控工具-jstat&quot;&gt;&lt;a href=&quot;#内置监控工具-jstat&quot; class=&quot;headerlink&quot; title=&quot;内置监控工具 - jstat&quot;&gt;&lt;/a&gt;内置监控工具 - jstat&lt;/h1&gt;&lt;h2 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot;</summary>
        
      
    
    
    
    
    <category term="JVM" scheme="http://littlefxc.github.io/tags/JVM/"/>
    
    <category term="Java" scheme="http://littlefxc.github.io/tags/Java/"/>
    
    <category term="监控工具" scheme="http://littlefxc.github.io/tags/%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>线程池ThreadPoolExecutor</title>
    <link href="http://littlefxc.github.io/2021/08/04/%E7%BA%BF%E7%A8%8B%E6%B1%A0ThreadPoolExecutor/"/>
    <id>http://littlefxc.github.io/2021/08/04/%E7%BA%BF%E7%A8%8B%E6%B1%A0ThreadPoolExecutor/</id>
    <published>2021-08-04T14:01:38.000Z</published>
    <updated>2021-08-05T15:30:59.555Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;线程就是一个放线程的池子。&lt;/p&gt;
&lt;p&gt;使用线程池的好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重用已存在的线程，从而减少对象创建和销毁的开销。&lt;/li&gt;
&lt;li&gt;控制并发，从而提高资源利用率，有效避免过多的资源竞争，提升性能&lt;/li&gt;
&lt;li&gt;功能强大，有定时执行、定期执行、单线程执行、并发控制等等&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="Java" scheme="http://littlefxc.github.io/tags/Java/"/>
    
    <category term="多线程" scheme="http://littlefxc.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    <category term="线程池" scheme="http://littlefxc.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>ab使用教程</title>
    <link href="http://littlefxc.github.io/2021/08/02/ab%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://littlefxc.github.io/2021/08/02/ab%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2021-08-02T01:26:12.000Z</published>
    <updated>2021-08-02T01:32:52.134Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;ab全称Apache HTTP server benchmarking</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>对象池实战-编写一个数据库连接池</title>
    <link href="http://littlefxc.github.io/2021/08/01/%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/"/>
    <id>http://littlefxc.github.io/2021/08/01/%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</id>
    <published>2021-08-01T08:49:55.000Z</published>
    <updated>2021-08-01T12:33:00.217Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
    <category term="Java" scheme="http://littlefxc.github.io/tags/Java/"/>
    
    <category term="池化技术" scheme="http://littlefxc.github.io/tags/%E6%B1%A0%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>对象池 commons-pool2</title>
    <link href="http://littlefxc.github.io/2021/08/01/%E5%AF%B9%E8%B1%A1%E6%B1%A0-commons-pool2/"/>
    <id>http://littlefxc.github.io/2021/08/01/%E5%AF%B9%E8%B1%A1%E6%B1%A0-commons-pool2/</id>
    <published>2021-08-01T05:48:21.000Z</published>
    <updated>2021-08-01T13:58:31.657Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1 前言&quot;&gt;&lt;/a&gt;1 前言&lt;/h1&gt;&lt;p&gt;池化技术是性能调优的重要措施，池化的思想是把对象放到池子里面，当要使用的时候从池子里面拿对象，用完之后在放回池子里面。这样可以降低资源分配和释放资源的开销，从而提升性能。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="http://littlefxc.github.io/tags/Java/"/>
    
    <category term="池化技术" scheme="http://littlefxc.github.io/tags/%E6%B1%A0%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>链路追踪zipkin</title>
    <link href="http://littlefxc.github.io/2021/07/27/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AAzipkin/"/>
    <id>http://littlefxc.github.io/2021/07/27/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AAzipkin/</id>
    <published>2021-07-27T05:34:25.000Z</published>
    <updated>2021-07-27T05:34:25.261Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>分布式事务</title>
    <link href="http://littlefxc.github.io/2021/07/24/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"/>
    <id>http://littlefxc.github.io/2021/07/24/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</id>
    <published>2021-07-24T08:38:01.000Z</published>
    <updated>2021-07-28T15:32:28.413Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1 概述&quot;&gt;&lt;/a&gt;1</summary>
        
      
    
    
    
    
    <category term="分布式事务" scheme="http://littlefxc.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"/>
    
    <category term="分布式" scheme="http://littlefxc.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>分布式全局ID</title>
    <link href="http://littlefxc.github.io/2021/07/18/%E5%88%86%E5%B8%83%E5%BC%8F%E5%85%A8%E5%B1%80ID/"/>
    <id>http://littlefxc.github.io/2021/07/18/%E5%88%86%E5%B8%83%E5%BC%8F%E5%85%A8%E5%B1%80ID/</id>
    <published>2021-07-18T09:22:17.000Z</published>
    <updated>2021-07-19T15:00:20.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1 前言&quot;&gt;&lt;/a&gt;1 前言&lt;/h1&gt;&lt;p&gt;在分库分表的过程中，因为拆分的实体表的ID有可能是重复的，正式由于这个问题才会有分布式全局ID这个方案的出现。&lt;/p&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="http://littlefxc.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="分布式全局ID" scheme="http://littlefxc.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%85%A8%E5%B1%80ID/"/>
    
  </entry>
  
  <entry>
    <title>基于Sharding-Jdbc的读写分离和分库分表</title>
    <link href="http://littlefxc.github.io/2021/07/11/%E5%9F%BA%E4%BA%8ESharding-Jdbc%E7%9A%84%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E5%92%8C%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/"/>
    <id>http://littlefxc.github.io/2021/07/11/%E5%9F%BA%E4%BA%8ESharding-Jdbc%E7%9A%84%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E5%92%8C%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/</id>
    <published>2021-07-11T03:37:33.000Z</published>
    <updated>2021-07-11T04:37:16.538Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;是一个开源的分布式的关系型数据库的中间件&lt;/li&gt;
&lt;li&gt;已于2020年4月16日成为 Apache 软件基金会的顶级项目&lt;/li&gt;
&lt;li&gt;客户端代理模式&lt;/li&gt;
&lt;li&gt;定位为轻量级的Java框架，以 jar 包提供服务&lt;/li&gt;
&lt;li&gt;可以理解为增强版的 jdbc 驱动&lt;/li&gt;
&lt;li&gt;完全兼容各种 ORM 框架&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="读写分离" scheme="http://littlefxc.github.io/tags/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
    <category term="分库分表" scheme="http://littlefxc.github.io/tags/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/"/>
    
    <category term="sharing-jdbc" scheme="http://littlefxc.github.io/tags/sharing-jdbc/"/>
    
  </entry>
  
  <entry>
    <title>JVM之对象的创建过程</title>
    <link href="http://littlefxc.github.io/2021/07/09/JVM%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
    <id>http://littlefxc.github.io/2021/07/09/JVM%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B/</id>
    <published>2021-07-09T09:11:23.000Z</published>
    <updated>2021-07-10T04:10:56.860Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/littlefxc/oss/raw/master/images/isn4Ur.png&quot; alt=&quot;image-20210709171519463&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="JVM" scheme="http://littlefxc.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Keepalived原理和配置详解</title>
    <link href="http://littlefxc.github.io/2021/07/08/Keepalived%E5%8E%9F%E7%90%86%E5%92%8C%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://littlefxc.github.io/2021/07/08/Keepalived%E5%8E%9F%E7%90%86%E5%92%8C%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-07-08T07:50:31.000Z</published>
    <updated>2021-07-08T08:26:12.303Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;1-Keepalived-简介&quot;&gt;&lt;a href=&quot;#1-Keepalived-简介&quot; class=&quot;headerlink&quot; title=&quot;1 Keepalived 简介&quot;&gt;&lt;/a&gt;1 Keepalived 简介&lt;/h1&gt;&lt;p&gt;Keepalived</summary>
        
      
    
    
    
    
    <category term="keepalived" scheme="http://littlefxc.github.io/tags/keepalived/"/>
    
  </entry>
  
  <entry>
    <title>编译JDK</title>
    <link href="http://littlefxc.github.io/2021/07/06/%E7%BC%96%E8%AF%91JDK/"/>
    <id>http://littlefxc.github.io/2021/07/06/%E7%BC%96%E8%AF%91JDK/</id>
    <published>2021-07-06T03:06:55.000Z</published>
    <updated>2021-07-06T11:12:50.655Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;1-macOS-编译-OpenJDK&quot;&gt;&lt;a href=&quot;#1-macOS-编译-OpenJDK&quot; class=&quot;headerlink&quot; title=&quot;1 macOS 编译 OpenJDK&quot;&gt;&lt;/a&gt;1 macOS 编译 OpenJDK&lt;/h1&gt;&lt;p&gt;目标：编译 OpenJDK17&lt;/p&gt;
&lt;h2 id=&quot;1-1-准备编译环境&quot;&gt;&lt;a href=&quot;#1-1-准备编译环境&quot; class=&quot;headerlink&quot; title=&quot;1.1 准备编译环境&quot;&gt;&lt;/a&gt;1.1 准备编译环境&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;首先去应用商店安装 &lt;code&gt;xcode.app&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装 &lt;code&gt;JDK16&lt;/code&gt;（比要编译的JDK低一个版本，如要编译的openjdk17,那就安装jdk16）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew install freetype ccache&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java虚拟机" scheme="http://littlefxc.github.io/categories/Java%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
    <category term="jdk" scheme="http://littlefxc.github.io/tags/jdk/"/>
    
    <category term="jvm" scheme="http://littlefxc.github.io/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>MySQL主从搭建</title>
    <link href="http://littlefxc.github.io/2021/06/20/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/"/>
    <id>http://littlefxc.github.io/2021/06/20/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/</id>
    <published>2021-06-20T08:45:19.000Z</published>
    <updated>2021-06-20T09:30:29.502Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;关键点&quot;&gt;&lt;a href=&quot;#关键点&quot; class=&quot;headerlink&quot; title=&quot;关键点&quot;&gt;&lt;/a&gt;关键点&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;主配置 log-bin，指定文件的名字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;主配置 server-id，默认为1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从 server-id 与主不能重复&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;主数据库创建备份账户并授权 &lt;code&gt;REPLICATION SLAVE&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;主数据库锁表 &lt;code&gt;FLUSH TABLES WITH READ LOCK&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;主数据库找到 &lt;code&gt;log-bin&lt;/code&gt; 的位置 &lt;code&gt;SHOW MASTER STATUS&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;备份主数据库数据 &lt;code&gt;mysqldump -all-datables --master-data &amp;gt; dbduump.db&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;主数据库解锁 &lt;code&gt;unlock tables&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从数据库导入 dump的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在从数据库上设置主数据库的配置&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; CHANGE MASTER &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; MASTER_HOST&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;master_host_name&amp;#x27;&lt;/span&gt;, 	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; MASTER_PORT&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;port_num &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; MASTER_USER&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;replication_user_name&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; MASTER_PASSWORD&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;replication_password&amp;#x27;&lt;/span&gt;, 			        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; MASTER_LOG_FILE&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;recorded_log_file_name&amp;#x27;&lt;/span&gt;,			   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; MASTER_LOG_POS&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;recorded_log_position;                                                       &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;master_host_name : MySQL主的地址&lt;/li&gt;
&lt;li&gt;port_num : MySQL主的端口（数字型）&lt;/li&gt;
&lt;li&gt;replication_user_name : 备份账户的用户名&lt;/li&gt;
&lt;li&gt;replication_password : 备份账户的密码&lt;/li&gt;
&lt;li&gt;recorded_log_file_name ：bin-log的文件名&lt;/li&gt;
&lt;li&gt;recorded_log_position : bin-log的位置（数字型）&lt;/li&gt;
&lt;li&gt;bin-log的文件名和位置 是 从 &lt;code&gt;show master status&lt;/code&gt; 得到的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="mysql" scheme="http://littlefxc.github.io/categories/mysql/"/>
    
    
    <category term="mysql" scheme="http://littlefxc.github.io/tags/mysql/"/>
    
    <category term="读写分离" scheme="http://littlefxc.github.io/tags/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>搭建Mycat</title>
    <link href="http://littlefxc.github.io/2021/06/09/%E6%90%AD%E5%BB%BAMycat/"/>
    <id>http://littlefxc.github.io/2021/06/09/%E6%90%AD%E5%BB%BAMycat/</id>
    <published>2021-06-09T12:51:05.000Z</published>
    <updated>2021-07-08T07:54:25.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;1-环境搭建&quot;&gt;&lt;a href=&quot;#1-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;1 环境搭建&quot;&gt;&lt;/a&gt;1 环境搭建&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;3台服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;centos</summary>
        
      
    
    
    
    <category term="mycat" scheme="http://littlefxc.github.io/categories/mycat/"/>
    
    
    <category term="读写分离" scheme="http://littlefxc.github.io/tags/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
    <category term="分库分表" scheme="http://littlefxc.github.io/tags/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/"/>
    
    <category term="mycat" scheme="http://littlefxc.github.io/tags/mycat/"/>
    
  </entry>
  
</feed>
